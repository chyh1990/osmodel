# ------------------------------------------------------------------
# This configuration file uses explicit analysis of local integer
# variables in a model-checking configuration.
# Found errors are cross-checked by CBMC.
# ------------------------------------------------------------------

# Check counterexamples with CBMC.
analysis.useCBMC = true
counterexample.continueAfterInfeasibleError = false

# ARGCPA is needed for counterexample analysis
cpa = cpa.arg.ARGCPA

# FunctionPointerCPA provides handling of function pointers
ARGCPA.cpa = cpa.functionpointer.FunctionPointerCPA

FunctionPointerCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.explicit.ExplicitCPA, cpa.conditions.global.GlobalConditionsCPA

# The specification to check.
specification = config/specification/sv-comp.spc

# Set time limit to 100 seconds
cpa.conditions.global.time.wall = 100s

# Write counterexample to file (required by competition).
cpa.arg.errorPath.file = ErrorPath.txt
